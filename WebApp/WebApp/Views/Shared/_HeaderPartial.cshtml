@using System.Security.Claims
@{
    var userRole = User.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).ToList();
    var userName = User.Claims.FirstOrDefault(x => x.Type == "DisplayName")?.Value;
}

@* @{
    var provider = User?.FindFirstValue(ClaimTypes.AuthenticationMethod);
    if (string.IsNullOrEmpty(provider))
        provider = "Local Identity";

    var email = User?.FindFirstValue(ClaimTypes.Email);
} *@



<form class="search-form" method="get" asp-controller="" asp-action="" novalidate>
    <i class="fa-solid fa-magnifying-glass"></i>
    <input type="search" class="form-search-input" placeholder="Search anything... " />
</form>

<!--  NOTIFICATION DROPDOWN -->
<div id="notification-container">
    <button type="button" data-target="#notification-dropdown" class="btn-notification">
        <i class="dot dot-red fa-solid fa-circle"></i>
        <i class="fa-duotone fa-solid fa-bell" style="--fa-primary-opacity: 0.4; --fa-secondary-opacity: 1;"></i>
    </button>

    <div id="notification-dropdown" class="dropdown">
        <div class="dropdown-header">
            <h4>Notifications</h4>
            <div class="badge badge-red">0</div>
        </div>
        <div class="divider"></div>
        <div class="notifications" data-notification-type="user">
            @foreach (var notification in ViewBag.Notifications ?? new List<Notification>())
            {
                <div class="notification" data-notification-type="@notification.Type" data-notification-id="@notification.Id">
                    <div class="user-image">
                        <img src="~/images/Admin/Contacts.svg" alt="User Image" />
                        <div class="account-info">
                            <span>@User.Identity?.Name</span>
                            <div class="provider">@userRole</div>
                        </div>
                    </div>
                    <span class="message">@notification.Message</span>
                    <span class="time">@notification.Time.ToShortTimeString()</span>
                    <button class="btn-remove"></button>
                </div>
            }
        </div>
    </div>
</div>

<!--  ACCOUNT DROPDOWN -->
<div id="account-container">
    <button type="button" data-target="#account-dropdown" class="btn-account">
        <img src="~/images/Admin/Contacts.svg" alt="User Image" />
    </button>
    <div id="account-dropdown" class="dropdown">
        <div class="dropdown-header">
            <div class="account-name">
                <img src="~/images/Admin/Contacts.svg" alt="User Image" />
                <div class="account-info">
                    <span class="text-muted">Current Role:</span>
                    @if (userRole.Any())
                    {
                        <span>@string.Join(", ", userRole)</span>
                    }
                   
                   
                    <div><small>@User.Identity?.Name</small></div>
                    <div class="provider"></div>
                </div>
            </div>
        </div>
        <div class="dropdown-body">
            <nav class="dropdown-options">
                <div class="dropdown-option">
                    <label for="darkModeToggle" class="switch-label">
                        <i class="fa-duotone fa-solid fa-cog"></i>
                        <span>Dark Mode</span>
                    </label>
                    <label class="switch">
                        <input type="checkbox" id="darkModeToggle" data-type="toggle" data-func="darkmode" />
                        <span class="switch-slider"></span>
                    </label>
                </div>
            </nav>
            <div class="divider"></div>
            <nav class="dropdown-options">
                <a asp-controller="Auth" asp-action="Logout" class="btn-external btn-signout">
                    <i class="fa-duotone fa-solid fa-right-from-bracket"></i>
                    <span>Logout</span>
                </a>
            </nav>
        </div>
    </div>
</div>

